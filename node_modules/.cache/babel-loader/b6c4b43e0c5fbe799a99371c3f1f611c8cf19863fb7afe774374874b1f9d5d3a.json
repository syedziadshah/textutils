{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syed Ziad Shah\\\\Desktop\\\\React\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './component/Navbar';\nimport './App.css';\nimport TextFrom from './component/TextFrom';\nimport { useState } from 'react';\nimport Alert from './component/Alert';\nimport About from './component/About';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode is Enable \", \"success\");\n      document.title = 'textUtils dark mode';\n      setInterval(() => {\n        document.title = 'textUtils is amazing';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'install textUtils now';\n      }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is Enable \", \"success\");\n      document.title = 'textUtils white mode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils2\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextFrom, {\n            showAlert: showAlert,\n            heading: \"Enter the text to analyze below\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextFrom","useState","Alert","About","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/Syed Ziad Shah/Desktop/React/reactapp/src/App.js"],"sourcesContent":["import Navbar from './component/Navbar';\nimport './App.css';\nimport TextFrom from './component/TextFrom';\nimport { useState } from 'react';\nimport Alert from './component/Alert';\nimport About from './component/About';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode is Enable \", \"success\");\n      document.title = 'textUtils dark mode';\n      setInterval(() => {\n        document.title = 'textUtils is amazing';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'install textUtils now';\n      }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is Enable \", \"success\");\n      document.title = 'textUtils white mode';\n    }\n  };\n\n  return (\n    <BrowserRouter>\n      <Navbar title=\"TextUtils2\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/\" element={<TextFrom showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC5CT,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC;MAC5CM,QAAQ,CAACI,KAAK,GAAG,qBAAqB;MACtCC,WAAW,CAAC,MAAM;QAChBL,QAAQ,CAACI,KAAK,GAAG,sBAAsB;MACzC,CAAC,EAAE,IAAI,CAAC;MACRC,WAAW,CAAC,MAAM;QAChBL,QAAQ,CAACI,KAAK,GAAG,uBAAuB;MAC1C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,uBAAuB,EAAE,SAAS,CAAC;MAC7CM,QAAQ,CAACI,KAAK,GAAG,sBAAsB;IACzC;EACF,CAAC;EAED,oBACEjB,OAAA,CAACJ,aAAa;IAAAuB,QAAA,gBACZnB,OAAA,CAACT,MAAM;MAAC0B,KAAK,EAAC,YAAY;MAACd,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEvB,OAAA,CAACN,KAAK;MAACW,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC7BnB,OAAA,CAACH,MAAM;QAAAsB,QAAA,gBACLnB,OAAA,CAACF,KAAK;UAAC2B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAE1B,OAAA,CAACL,KAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CvB,OAAA,CAACF,KAAK;UAAC2B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAE1B,OAAA,CAACR,QAAQ;YAACe,SAAS,EAAEA,SAAU;YAACoB,OAAO,EAAC,iCAAiC;YAACxB,IAAI,EAAEA;UAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACrB,EAAA,CA9CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}